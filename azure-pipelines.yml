# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  displayName: Build Net Api $(ProjectName) $(Version)
  inputs:
    filePath: './BuildNetApi.ps1'
    arguments: './BuildNetApi.ps1; PrivateBuildNetApi'
  timeoutInMinutes: 10
  continueOnError: true
  
- task: PublishTestResults@2
  displayName: Publish Test Result Net Api $(ProjectName) $(Version)
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage Report Net Api $(ProjectName) $(Version)
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/test/coverage/coverage.cobertura.xml'
    failIfCoverageEmpty: true

# - task: PublishBuildArtifacts@1
#   displayName: Publish Artifacts Net Api $(ProjectName) $(Version)
#   inputs:
#     pathtoPublish: '$(System.DefaultWorkingDirectory)/src/api/MasterChechBotWebApi/publish'
#     artifactName: '$(ProjectName)WebApi'
#     publishLocation: 'Container'

- task: Docker@2
  displayName: Build and Push Docker Image Net Api $(ProjectName) $(Version)
  inputs:
    containerRegistry: 'Container Registry MasterChech'
    repository: 'master-chech-webapi'
    command: 'buildAndPush'
    Dockerfile: '$(System.DefaultWorkingDirectory)/src/api/MasterChechBotWebApi/Dockerfile'
    buildContext: '$(System.DefaultWorkingDirectory)/src/api/MasterChechBotWebApi/'
    tags: |
      $(Build.BuildId)
      latest

- task: PowerShell@2
  displayName: Build React WebApp React $(ProjectName) $(Version)
  inputs:
    filePath: './BuildReactApp.ps1'
    arguments: './BuildReactApp.ps1;  PrivateBuildReact'
  timeoutInMinutes: 10

