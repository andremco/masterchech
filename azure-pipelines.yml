# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: PipelineNetProject
  displayName: Pipeline .Net Project
  jobs:
  - job: PipelineWebApi
    steps:
    - task: PowerShell@2
      displayName: Build Net Api $(ProjectName) $(Version)
      inputs:
        filePath: './BuildNetApi.ps1'
        arguments: './BuildNetApi.ps1; CIBuildNetApi'
      timeoutInMinutes: 10
      continueOnError: false

    - task: PublishCodeCoverageResults@1
      displayName: Publish Code Coverage Net Api $(ProjectName) $(Version)
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/test/coverage/coverage.cobertura.xml'
        failIfCoverageEmpty: false

    - task: PublishTestResults@2
      displayName: Publish Test Result Net Api $(ProjectName) $(Version)
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '**/*.trx'
        failTaskOnFailedTests: true

    - task: Docker@2
      displayName: Build and Push Docker Image Net Api $(ProjectName) $(Version)
      inputs:
        containerRegistry: 'Container Registry MasterChech'
        repository: 'master-chech-webapi'
        command: 'buildAndPush'
        Dockerfile: '$(System.DefaultWorkingDirectory)/src/api/src/MasterChechBot.WebApi/Dockerfile'
        buildContext: '$(System.DefaultWorkingDirectory)/src/api/src/MasterChechBot.WebApi/'
        tags: |
          $(Build.BuildId)
          latest

- stage: PipelineReactProject
  displayName: Pipeline React Project
  jobs: 
  - job: PipelineWebApp
    steps:
    - task: PowerShell@2
      displayName: Build React WebApp $(ProjectName) $(Version)
      inputs:
        filePath: './BuildReactApp.ps1'
        arguments: './BuildReactApp.ps1; CIBuildReact;'
      timeoutInMinutes: 10
      continueOnError: false
      env:
        APIKEYHEADER: $(ApiKeyHeader)    
    - task: Docker@2
      displayName: Build and Push Docker Image React WebApp $(ProjectName) $(Version)
      inputs:
        containerRegistry: 'Container Registry MasterChech'
        repository: 'master-chech-webapp'
        command: 'buildAndPush'
        Dockerfile: '$(System.DefaultWorkingDirectory)/src/webapp/Dockerfile'
        buildContext: '$(System.DefaultWorkingDirectory)/src/webapp/' 
        tags: |
          $(Build.BuildId)
          latest

- stage: PublishScriptForDeploy
  displayName: Publish Script Poweshell For Deploy
  jobs:
  - job: PipelinePublishScript
    steps:
    - task: PublishBuildArtifacts@1
      displayName: Publish Powershell Deploy Azure $(ProjectName) $(Version)
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/DeployAzureContainer.ps1'
        ArtifactName: 'script-powershell-for-deploy'
        publishLocation: 'Container'  





      

    